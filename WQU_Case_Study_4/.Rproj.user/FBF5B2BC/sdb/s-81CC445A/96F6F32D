{
    "collab_server" : "",
    "contents" : "# Require the Quantmod package\nrequire(quantmod)\n\n# Get the 3 Year DJIA Data\nDJIA_index <- getSymbols(Symbols = \"DJIA\",\n                         src = \"yahoo\",\n                         from = \"2014-03-31\",\n                         to = \"2017-03-31\",\n                         retrun.class = \"xts\")\n\n# Get the components\nDJIA_tickers <- c(\"AAPL\", \"AXP\", \"BA\", \"CAT\", \"CSCO\",\n                  \"CVX\", \"KO\", \"DD\", \"XOM\", \"GE\",\n                  \"GS\", \"HD\", \"IBM\", \"INTC\", \"JNJ\",\n                  \"JPM\", \"MCD\", \"MMM\", \"MRK\", \"MSFT\",\n                  \"NKE\", \"PFE\", \"PG\", \"TRV\", \"UNH\",\n                  \"UTX\", \"V\", \"VZ\", \"WMT\", \"DIS\")\n\nDJIA_components <- getSymbols(Symbols = DJIA_tickers,\n                              src = \"yahoo\",\n                              from = \"2014-03-31\",\n                              to = \"2017-03-31\",\n                              return.class = \"xts\")\n\n# Get the monthly returns\n# DJIA Index Monthly Return\nmonthly_DJIA_index <- monthlyReturn(DJIA)\n\n# DJIA Components Monthly Returns\nfor(i in 1:length(DJIA_tickers)) {\n  assign(paste(DJIA_tickers[i], \"_monthly_DJIA_component\", sep=\"\"),\n         monthlyReturn(eval(as.name(DJIA_tickers[i]))))\n}\n\n\n# Calculate the Average Monthly Return and Standard Deviation on DJIA\nmean_DJIA_index <- mean(monthly_DJIA_index)\nsd_DJIA_index <- sd(monthly_DJIA_index)\n\n# Get tickers for Portfolios to construct\ntickers_five_stock_portfolio <- sample(DJIA_tickers, 5)\ntickers_ten_stock_portfolio <- sample(DJIA_tickers, 10)\ntickers_fifteen_stock_portfolio <- sample(DJIA_tickers, 15)\ntickers_twenty_stock_portfolio <- sample(DJIA_tickers, 20)\ntickers_twentyfive_stock_portfolio <- sample(DJIA_tickers, 25)\n\n# Combine the Monthly Returns of the Portfolios into a DataFrame \n# Create DataFrames for the Portfolios\nfive_stock_portfolio <- as.data.frame(matrix(nrow = length(monthly_DJIA_index),\n                                             ncol = 5))\nten_stock_portfolio <- as.data.frame(matrix(nrow = length(monthly_DJIA_index),\n                                            ncol = 10))\nfifteen_stock_portfolio <- as.data.frame(matrix(nrow = length(monthly_DJIA_index),\n                                                ncol = 15))\ntwenty_stock_portfolio <- as.data.frame(matrix(nrow = length(monthly_DJIA_index),\n                                               ncol = 20))\ntwentyfive_stock_portfolio <- as.data.frame(matrix(nrow = length(monthly_DJIA_index),\n                                                   ncol = 25))\n\n# Function for constructing portfolios\nportfolio_construct = function(ticker_data, portfolio_data_frame){\n  for(i in 1:length(ticker_data)){\n    portfolio_data_frame[ticker_data[i]] <- as.vector(\n      eval(as.name(paste(ticker_data[i],\n                         \"_monthly_DJIA_component\",\n                         sep = \"\")))\n    )\n  }\n  # Drop All NA Values\n  portfolio_data_frame <- portfolio_data_frame[,colSums(is.na(portfolio_data_frame))\n                                               <\n                                                 nrow(portfolio_data_frame)]\n  return (portfolio_data_frame)\n}\n\n\n# Construct the portfolios\nfive_stock_portfolio <- portfolio_construct(tickers_five_stock_portfolio, five_stock_portfolio)\nten_stock_portfolio <- portfolio_construct(tickers_ten_stock_portfolio, ten_stock_portfolio)\nfifteen_stock_portfolio <- portfolio_construct(tickers_fifteen_stock_portfolio, fifteen_stock_portfolio)\ntwenty_stock_portfolio <- portfolio_construct(tickers_twenty_stock_portfolio, twenty_stock_portfolio)\ntwentyfive_stock_portfolio <- portfolio_construct(tickers_twentyfive_stock_portfolio, twentyfive_stock_portfolio)\n\n\n# Get the monthly returns for each of the portfolios\nmonthly_five_stock_portfolio <- rowSums(five_stock_portfolio) * (1/5)\nmonthly_ten_stock_portfolio <- rowSums(ten_stock_portfolio) * (1/10)\nmonthly_fifteen_stock_portfolio <- rowSums(fifteen_stock_portfolio) * (1/15)\nmonthly_twenty_stock_portfolio <- rowSums(twenty_stock_portfolio) * (1/20)\nmonthly_twentyfive_stock_portfolio <- rowSums(twentyfive_stock_portfolio) * (1/25)\n\n\n# Get the mean and standard deviation of all the portfolios\nmean_five_stock_portfolio <- mean(monthly_five_stock_portfolio)\nmean_ten_stock_portfolio <- mean(monthly_ten_stock_portfolio)\nmean_fifteen_stock_portfolio <- mean(monthly_fifteen_stock_portfolio)\nmean_twenty_stock_portfolio <- mean(monthly_twenty_stock_portfolio)\nmean_twentyfive_stock_portfolio <- mean(monthly_twentyfive_stock_portfolio)\n\nsd_five_stock_portfolio <- sd(monthly_five_stock_portfolio)\nsd_ten_stock_portfolio <- sd(monthly_ten_stock_portfolio)\nsd_fifteen_stock_portfolio <- sd(monthly_fifteen_stock_portfolio)\nsd_twenty_stock_portfolio <- sd(monthly_twenty_stock_portfolio)\nsd_twentyfive_stock_portfolio <- sd(monthly_twentyfive_stock_portfolio)\n\n# Calculate Tracking Errors\n# Benchmarked against mean of the DJIA index\nfive_mean_tracking_error <- mean_five_stock_portfolio - mean_DJIA_index\nten_mean_tracking_error <- mean_ten_stock_portfolio - mean_DJIA_index\nfifteen_mean_tracking_error <- mean_fifteen_stock_portfolio - mean_DJIA_index\ntwenty_mean_tracking_error <- mean_twenty_stock_portfolio - mean_DJIA_index\ntwentyfive_mean_tracking_error <- mean_twentyfive_stock_portfolio - mean_DJIA_index\n\n# Benchmarked against sd of DJIA index\nfive_sd_tracking_error <- sd_five_stock_portfolio - sd_DJIA_index\nten_sd_tracking_error <- sd_ten_stock_portfolio - sd_DJIA_index\nfifteen_sd_tracking_error <- sd_fifteen_stock_portfolio - sd_DJIA_index\ntwenty_sd_tracking_error <- sd_twenty_stock_portfolio - sd_DJIA_index\ntwentyfive_sd_tracking_error <- sd_twentyfive_stock_portfolio - sd_DJIA_index\n\n\n# Plot the benchmarks\nplot(c(five_sd_tracking_error, ten_sd_tracking_error, fifteen_sd_tracking_error,\n       twenty_sd_tracking_error, twentyfive_sd_tracking_error),\n     c(\"5\", \"10\", \"15\", \"20\", \"25\"),\n     xlab = \"Standard Deviation (Proxy for Risk)\",\n     ylab = \"Sample Size\")\n",
    "created" : 1491126271363.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "241499494",
    "id" : "96F6F32D",
    "lastKnownWriteTime" : 1491140514,
    "last_content_update" : 1491140514932,
    "path" : "~/WQU_Case_Study_4/CaseStudy4.R",
    "project_path" : "CaseStudy4.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}